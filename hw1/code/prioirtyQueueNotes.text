/*

// C Program to Implement Priority Queue to Add and Delete Elements

looks like this, the position in the array depents on the int prioeirty in

//THIS PROGRAM IS NOT EFICEINT, IT USES COPIES AMMOUNTS OF SHIFTING ALL THE ELEMENTS IN AN ARRAY



        pQ[0]
        /   \
    pQ[1]   pQ[2]
    /   \   /   \

    so on and so forth

        0
   1          2
 3   4     5     6
7 8 9 10 11 12 13 14

//highest number will be the highest priority


//    priorityQueue[correctvalue].data = data;
  //  priorityQueue[correctValue].priority = priorityQueue


//check children
//if (priorityQueue[i].priority >= priorityQueue[(2*i)+ 1].priority & priorityQueue[(2*i)+2].priority){

//check parrent
//integer dividison rounding remember
//if(priorityQueue[k].priority < priortyQueue[(i+1)/2]).priority & priorityQueue [(i+2) / 2].priority{


*/